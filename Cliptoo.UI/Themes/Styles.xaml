<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <!--  Custom Brushes that don't have a direct WPF-UI equivalent  -->
    <SolidColorBrush x:Key="ErrorTextBrush" Color="{DynamicResource SystemFillColorCritical}" />
    <SolidColorBrush x:Key="HyperlinkBlueBrush" Color="#0078D4" />
    <SolidColorBrush x:Key="HyperlinkBlueBrushHover" Color="#005A9E" />

    <Style
        x:Key="SecondaryAccentButton"
        BasedOn="{StaticResource {x:Type ui:Button}}"
        TargetType="ui:Button">
        <Setter Property="Height" Value="32" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <Border
                            x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            CornerRadius="4"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="{Binding DataContext.IsQuickPasteModeActive, RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Viewbox MaxHeight="{Binding ActualHeight, ElementName=Bd, Converter={StaticResource MultiplyConverter}, ConverterParameter=0.98}">
                                <Image
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Source="{Binding QuickPasteIcon}"
                                    Stretch="Uniform"
                                    Visibility="{Binding Index, Converter={StaticResource IndexToVisibilityConverter}}" />
                            </Viewbox>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SystemFillColorSolidAttentionBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBorder"
                            Grid.Column="0"
                            Width="18"
                            Height="18"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="3">
                            <TextBlock
                                x:Name="checkMark"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="14"
                                FontWeight="Bold"
                                Foreground="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                                Text="âœ“"
                                Visibility="Hidden" />
                        </Border>
                        <ContentPresenter
                            Grid.Column="1"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkBorder" Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
                            <Setter TargetName="checkBorder" Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBorder" Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Hyperlink">
        <Setter Property="Foreground" Value="{StaticResource HyperlinkBlueBrush}" />
        <Setter Property="TextBlock.TextDecorations" Value="Underline" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource HyperlinkBlueBrushHover}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
