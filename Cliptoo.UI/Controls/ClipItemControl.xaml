<UserControl
    x:Class="Cliptoo.UI.Controls.ClipItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Cliptoo.UI.Converters"
    xmlns:core="clr-namespace:Cliptoo.Core;assembly=Cliptoo.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:Cliptoo.UI.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tooltips="clr-namespace:Cliptoo.UI.Controls.Tooltips"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:viewModels="clr-namespace:Cliptoo.UI.ViewModels"
    Height="Auto"
    Padding="{Binding PaddingSize, Converter={StaticResource PaddingSizeToThicknessConverter}}"
    d:DataContext="{d:DesignInstance Type=viewModels:ClipViewModel}"
    Background="Transparent"
    SnapsToDevicePixels="True"
    TextOptions.TextFormattingMode="Display"
    TextOptions.TextRenderingMode="ClearType"
    mc:Ignorable="d">
    <Grid Background="Transparent" ContextMenuService.ContextMenu="{DynamicResource ClipContextMenu}">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Grid
            Grid.Column="0"
            Width="Auto"
            Height="Auto"
            Margin="0,0,10,0"
            VerticalAlignment="Center"
            ToolTip="{Binding ClipType, Converter={StaticResource ClipTypeToFriendlyNameConverter}}">
            <Grid
                Width="20"
                Height="20"
                Visibility="{Binding ClipType, Converter={StaticResource EqualityToVisibilityConverter}, ConverterParameter=color}">
                <Rectangle Fill="{StaticResource CheckerboardBrush}" Visibility="{Binding Content, Converter={StaticResource ColorToTransparencyVisibilityConverter}}" />
                <Border
                    Background="{Binding Content, Converter={StaticResource ColorToBrushConverter}}"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    CornerRadius="3" />
            </Grid>

            <StackPanel Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ClipType}" Value="color">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <Grid Width="20" Height="20">
                    <Grid Visibility="{Binding HasThumbnail, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ui:Image
                            RenderOptions.BitmapScalingMode="Fant"
                            Source="{Binding ThumbnailSource}"
                            Stretch="Uniform" />
                    </Grid>
                    <ui:ImageIcon Source="{Binding ClipTypeIcon}" Visibility="{Binding HasThumbnail, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=inverse}" />
                </Grid>
            </StackPanel>
        </Grid>
        <Grid
            Grid.Column="1"
            Background="Transparent"
            ToolTipOpening="ClipItem_ToolTipOpening">
            <Grid.ToolTip>
                <ToolTip Visibility="Collapsed" />
            </Grid.ToolTip>
            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                <ui:ImageIcon
                    Width="20"
                    Height="20"
                    Margin="0,0,4,0"
                    VerticalAlignment="Center"
                    Source="{Binding MainViewModel.WasTrimmedIcon}"
                    ToolTip="Content was modified (e.g., whitespace trimmed or content truncated)"
                    Visibility="{Binding WasTrimmed, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <TextBlock
                    x:Name="PreviewTextBlock"
                    VerticalAlignment="Center"
                    helpers:TextBlockHighlighter.FormattedText="{Binding Preview}"
                    FontFamily="{Binding CurrentFontFamily}"
                    FontSize="{Binding CurrentFontSize}"
                    TextTrimming="CharacterEllipsis">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <!--  Base foreground is now inherited from ListViewItem  -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSourceMissing}" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                                    <Setter Property="TextDecorations" Value="Strikethrough" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPinned}" Value="True" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource AccentBrush}" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </Grid>

        <StackPanel Grid.Column="2" Orientation="Horizontal">
            <Rectangle
                Width="20"
                Height="20"
                Margin="2,0,0,0"
                ToolTip="Pinned"
                Visibility="{Binding IsPinned, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="{Binding MainViewModel.PinIcon}" Stretch="Uniform" />
                </Rectangle.OpacityMask>
                <Rectangle.Style>
                    <Style TargetType="Rectangle">
                        <Setter Property="Fill" Value="{DynamicResource AccentBrush}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                                <Setter Property="Fill" Value="White" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>

            <Rectangle
                Width="20"
                Height="20"
                Margin="2,0,0,0"
                ToolTip="Multi-line Content"
                Visibility="{Binding IsMultiLine, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="{Binding MainViewModel.MultiLineIcon}" Stretch="Uniform" />
                </Rectangle.OpacityMask>
                <Rectangle.Style>
                    <Style TargetType="Rectangle">
                        <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                                <Setter Property="Fill" Value="White" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
        </StackPanel>

    </Grid>
</UserControl>
